@startuml
actor "User" as user
participant "<u>:Terminal" as terminal
participant "<u>:InstructorCollection" as instructorCollection
collections "<u>:Instructor" as instructors
participant "<u>instructor:Instructor" as instructorObj

user -> terminal : requestRegister()
activate user
activate terminal
terminal -> user : displayRegistrationForm
deactivate terminal
deactivate user
user -> terminal : inputCredentials(firstName, lastName, email, password)
activate terminal
activate user

terminal -> instructorCollection : validateInput(firstName, lastName, email, password)
activate instructorCollection

alt Valid Input
    instructorCollection -> instructorObj ** : create(firstName, lastName, email, password)
    activate instructorCollection    
    activate instructorObj

    alt Instructor Created Successfully
        instructorObj --> instructorCollection : instructor
        deactivate instructorCollection
        instructorCollection -> instructors : add(instructor)
        activate instructorCollection
        activate instructors
        instructors --> instructorCollection : instructorAdded
        deactivate instructorCollection
        deactivate instructors

        instructorCollection --> terminal : success
        terminal --> user : registrationSuccessMessage
    else Instructor Creation Failed
        instructorObj --> instructorCollection : creationFailure
        deactivate instructorObj
        instructorCollection --> terminal : failure
        terminal --> user : registrationFailureMessage
    end

else Invalid Input
    instructorCollection --> terminal : inputValidationError
    deactivate instructorCollection
    terminal --> user : inputValidationError
    deactivate user
    deactivate terminal
end
@enduml